package teamProject;

public class Controller {

	//void 말고 다 다른거 넣을것같긴한데 나중에 DB만들고 DTO다 만들면 그때 바꿔도 될 것 같아서
	//일단 다 void로 놨어요..!
	
	//보드게임판 불러오기
	void gameBoard() {
		/* 반환 - 게임판 */
	}
	
	//플레이어 게임 현황(자산, 땅) 출력
	void status(/*플레이어*/) {
		/* 반환 - 해당 플레이어의 자산, 소유한 땅 */
	}
	
	//주사위 난수생성 
	void dice() {
		/* 반환 - 주사위 수 */
	}
	
	//주사위 나온 수 만큼 게임말 위치 업데이트 메소드
	void location(/*주사위 수, 플레이어*/) {
		/*반환 -> boolean ? */
		
	}
	
	//게임말 서있는 위치 빈땅 인지 남의 땅인지!
	void land(/*플레이어*/) {
		/* 반환 -> 땅 구매 가능 여부 */
	}
	
	// 땅 구매했으면 플레이어 정보 업데이트
	void buy(/* 플레이어 , 위치한 땅 */) {
		/*반환 -> boolean */
	}
	
	
	//통행료로 인한 자산 변동 업데이트
	void stateUpdate(/*금액, 지출한 플레이어*/) {
		/* 반환 - boolean */
	}
	
	//출발칸 지난 플레이어 월급 부여->자산 업데이트
	void salary(/*플레이어*/) {
		/*반환 -> boolean */
	}
	
	//올림픽 칸 멈춘 플레이어 지정한 땅 통행료 상승
	void olympic(/*플레이어 , 지정한 땅*/) {
		/*반환 -> boolean*/
	}
	
	//무인도 멈출때 메소드
	//업데이트 할 정보는 없으니까 view에서 주사위 굴리고 6일때만
	//위치 업데이트 메소드 실행하면 되지 않을까..!
	
	//황금열쇠
	void goldKey(){
		/*반환 -> 황금열쇠 정보*/
		//배열에 넣고, 인덱스는 난수 발생시켜서 하나만 보여주면 되나...?
	}
	
	
	//자산매각 0이하로 들어가면 매각 가능->정보 업데이트
	void sale(/*플레이어 , 선택한 땅*/) {
		/*반환 -> boolean*/
	}
	
	
}
